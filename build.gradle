plugins {
  id 'java'
  id 'io.qameta.allure' version '2.9.3'
}

group 'com.tsybulski'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots"
    mavenContent { snapshotsOnly() }
  }
}

ext {
  allureVersion = '2.16.1'
  junitVersion = '5.8.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  testImplementation 'com.codeborne:selenide-appium:2.1.1'
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
  testImplementation 'commons-io:commons-io:2.11.0'
  testImplementation('com.codeborne:selenide:5.25.0')
  testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
  testImplementation('org.slf4j:slf4j-simple:1.7.30')

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}
task libs(type: Sync) {
  from configurations.compileClasspath
  from configurations.testRuntimeClasspath
  into "$buildDir/lib"
}

testClasses.dependsOn libs

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
[compileJava, compileTestJava]*.sourceCompatibility = 17
[compileJava, compileTestJava]*.targetCompatibility = 17

test {
  useJUnitPlatform()

  systemProperties = [
          'file.encoding': 'UTF-8',
          'BUILD_URL': System.getenv()['BUILD_URL']
  ]
  testLogging.showStandardStreams = true
}
allure {
  autoconfigure = true
  version = "${allureVersion}"

    useJUnit5 {
    version = "${allureVersion}"
  }}